# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from grpc_mate import product_common_pb2 as grpc__mate_dot_product__common__pb2
from grpc_mate import product_search_engine_pb2 as grpc__mate_dot_product__search__engine__pb2


class ProductUpdateServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UploadProduct = channel.stream_unary(
        '/ProductUpdateService/UploadProduct',
        request_serializer=grpc__mate_dot_product__common__pb2.Product.SerializeToString,
        response_deserializer=grpc__mate_dot_product__search__engine__pb2.UploadProductResponse.FromString,
        )


class ProductUpdateServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def UploadProduct(self, request_iterator, context):
    """upload product into elastic search , make it so that we could search on it
    used to demo client side stream
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProductUpdateServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UploadProduct': grpc.stream_unary_rpc_method_handler(
          servicer.UploadProduct,
          request_deserializer=grpc__mate_dot_product__common__pb2.Product.FromString,
          response_serializer=grpc__mate_dot_product__search__engine__pb2.UploadProductResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ProductUpdateService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class ProductReadServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.DownloadProducts = channel.unary_stream(
        '/ProductReadService/DownloadProducts',
        request_serializer=grpc__mate_dot_product__search__engine__pb2.DownloadProductsRequest.SerializeToString,
        response_deserializer=grpc__mate_dot_product__common__pb2.Product.FromString,
        )
    self.SearchProducts = channel.unary_unary(
        '/ProductReadService/SearchProducts',
        request_serializer=grpc__mate_dot_product__search__engine__pb2.SearchProductsRequest.SerializeToString,
        response_deserializer=grpc__mate_dot_product__search__engine__pb2.SearchProductsResponse.FromString,
        )
    self.CalculateProductScore = channel.stream_stream(
        '/ProductReadService/CalculateProductScore',
        request_serializer=grpc__mate_dot_product__common__pb2.Product.SerializeToString,
        response_deserializer=grpc__mate_dot_product__search__engine__pb2.CalculateProductScoreResponse.FromString,
        )
    self.DownloadProductImage = channel.unary_stream(
        '/ProductReadService/DownloadProductImage',
        request_serializer=grpc__mate_dot_product__search__engine__pb2.DownloadProductImageRequest.SerializeToString,
        response_deserializer=grpc__mate_dot_product__common__pb2.DataChunk.FromString,
        )


class ProductReadServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def DownloadProducts(self, request, context):
    """download product by category
    used to demo server side stream
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SearchProducts(self, request, context):
    """search product and return all matched products
    used to demo simple grpc call
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CalculateProductScore(self, request_iterator, context):
    """calcualte each proeuct sore based on simple rule
    used to demo bi directional stream
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DownloadProductImage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ProductReadServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'DownloadProducts': grpc.unary_stream_rpc_method_handler(
          servicer.DownloadProducts,
          request_deserializer=grpc__mate_dot_product__search__engine__pb2.DownloadProductsRequest.FromString,
          response_serializer=grpc__mate_dot_product__common__pb2.Product.SerializeToString,
      ),
      'SearchProducts': grpc.unary_unary_rpc_method_handler(
          servicer.SearchProducts,
          request_deserializer=grpc__mate_dot_product__search__engine__pb2.SearchProductsRequest.FromString,
          response_serializer=grpc__mate_dot_product__search__engine__pb2.SearchProductsResponse.SerializeToString,
      ),
      'CalculateProductScore': grpc.stream_stream_rpc_method_handler(
          servicer.CalculateProductScore,
          request_deserializer=grpc__mate_dot_product__common__pb2.Product.FromString,
          response_serializer=grpc__mate_dot_product__search__engine__pb2.CalculateProductScoreResponse.SerializeToString,
      ),
      'DownloadProductImage': grpc.unary_stream_rpc_method_handler(
          servicer.DownloadProductImage,
          request_deserializer=grpc__mate_dot_product__search__engine__pb2.DownloadProductImageRequest.FromString,
          response_serializer=grpc__mate_dot_product__common__pb2.DataChunk.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ProductReadService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class EchoServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Echo = channel.unary_unary(
        '/EchoService/Echo',
        request_serializer=grpc__mate_dot_product__search__engine__pb2.EchoRequest.SerializeToString,
        response_deserializer=grpc__mate_dot_product__search__engine__pb2.EchoResponse.FromString,
        )


class EchoServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Echo(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EchoServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Echo': grpc.unary_unary_rpc_method_handler(
          servicer.Echo,
          request_deserializer=grpc__mate_dot_product__search__engine__pb2.EchoRequest.FromString,
          response_serializer=grpc__mate_dot_product__search__engine__pb2.EchoResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'EchoService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
